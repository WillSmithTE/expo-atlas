{"version":3,"file":"server.js","sourceRoot":"","sources":["../../../src/cli/server.ts"],"names":[],"mappings":";;;;;;AAAA,8CAAwB;AACxB,wDAAoE;AAEpE,oDAA8B;AAC9B,4DAAsC;AACtC,kDAA4B;AAG5B,oCAAmC;AAEnC,IAAM,UAAU,GAAG,cAAI,CAAC,OAAO,CAAC,SAAS,EAAE,gBAAgB,CAAC,CAAA;AAC5D,IAAM,gBAAgB,GAAG,cAAI,CAAC,IAAI,CAAC,UAAU,EAAE,aAAa,CAAC,CAAC;AAC9D,IAAM,gBAAgB,GAAG,cAAI,CAAC,IAAI,CAAC,UAAU,EAAE,aAAa,CAAC,CAAC;AAE9D,SAAgB,YAAY,CAAC,OAAgB;IAC3C,OAAO,CAAC,GAAG,CAAC,QAAQ,GAAG,YAAY,CAAC;IACpC,OAAO,CAAC,GAAG,CAAC,4BAA4B,GAAG,OAAO,CAAC,SAAS,CAAC;IAE7D,IAAM,GAAG,GAAG,IAAA,iBAAO,GAAE,CAAC;IAEtB,GAAG,CAAC,GAAG,CAAC,IAAA,qBAAW,GAAE,CAAC,CAAC;IAEvB,wGAAwG;IACxG,GAAG,CAAC,OAAO,CAAC,cAAc,CAAC,CAAC;IAE5B,GAAG,CAAC,GAAG,CACL,iBAAO,CAAC,MAAM,CAAC,gBAAgB,EAAE;QAC/B,MAAM,EAAE,IAAI;QACZ,UAAU,EAAE,CAAC,MAAM,CAAC;KACrB,CAAC,CACH,CAAC;IAEF,IAAI,SAAG,CAAC,UAAU,EAAE;QAClB,GAAG,CAAC,GAAG,CAAC,IAAA,gBAAM,EAAC,MAAM,CAAC,CAAC,CAAC;KACzB;IAED,GAAG,CAAC,GAAG,CACL,GAAG,EACH,IAAA,8BAAoB,EAAC;QACnB,KAAK,EAAE,gBAAgB;KACxB,CAAC,CACH,CAAC;IAEF,OAAO,GAAG,CAAC;AACb,CAAC;AA9BD,oCA8BC","sourcesContent":["import path from 'path';\nimport { createRequestHandler } from '@expo/server/adapter/express';\n\nimport express from 'express';\nimport compression from 'compression';\nimport morgan from 'morgan';\n\nimport { type Options } from './resolveOptions';\nimport { env } from '../utils/env';\n\nconst WEBUI_ROOT = path.resolve(__dirname, '../../../webui')\nconst CLIENT_BUILD_DIR = path.join(WEBUI_ROOT, 'dist/client');\nconst SERVER_BUILD_DIR = path.join(WEBUI_ROOT, 'dist/server');\n\nexport function createServer(options: Options) {\n  process.env.NODE_ENV = 'production';\n  process.env.EXPO_METRO_BUNDLE_STATS_FILE = options.statsFile;\n\n  const app = express();\n\n  app.use(compression());\n\n  // http://expressjs.com/en/advanced/best-practice-security.html#at-a-minimum-disable-x-powered-by-header\n  app.disable('x-powered-by');\n\n  app.use(\n    express.static(CLIENT_BUILD_DIR, {\n      maxAge: '1h',\n      extensions: ['html'],\n    })\n  );\n\n  if (env.EXPO_DEBUG) {\n    app.use(morgan('tiny'));\n  }\n\n  app.all(\n    '*',\n    createRequestHandler({\n      build: SERVER_BUILD_DIR,\n    })\n  );\n\n  return app;\n}\n"]}